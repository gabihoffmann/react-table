{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","Table","removeCharacter","Form","handleChange","event","target","name","value","setState","submitForm","preventDefault","handleSubmit","state","initialState","job","this","htmlFor","type","id","onChange","i","d","onClick","Component","App","characters","filter","character","className","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,WAChB,OACI,+BACQ,4BACI,oCACA,mCACA,yCAKdC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,OAa1C,OACI,+BACKJ,IAoBEK,EAdD,SAACN,GAAW,IAChBE,EAAkCF,EAAlCE,cAAeK,EAAmBP,EAAnBO,gBAEtB,OACS,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CACQL,cAAeA,EACfK,gBAAiBA,M,OCoB1BC,E,kDA5Df,WAAYR,GAAO,IAAD,8BACd,cAAMA,IAcNS,aAAe,SAACC,GAAU,IAAD,EACCA,EAAMC,OAArBC,EADc,EACdA,KAAMC,EADQ,EACRA,MAEb,EAAKC,SAAL,eACKF,EAAQC,KAnBH,EAwBdE,WAAa,SAACL,GACVA,EAAMM,iBACN,EAAKhB,MAAMiB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eAxBvB,EAAKA,aAAe,CAChBP,KAAM,GACNQ,IAAK,IAGT,EAAKF,MAAQ,EAAKC,aARJ,E,qDAiCL,IAAD,EACeE,KAAKH,MAAjBN,EADH,EACGA,KAAKQ,EADR,EACQA,IACZ,OACI,8BACI,2BAAOE,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLX,KAAK,OACLY,GAAG,OACHX,MAAOD,EACPa,SAAUJ,KAAKZ,eACnB,2BAAOa,QAAQ,OAAf,OACA,2BACIC,KAAK,OACLX,KAAK,MAAMc,GAAC,EACZC,EAAE,MACFd,MAAOO,EACPK,SAAUJ,KAAKZ,eACf,2BAAOc,KAAK,SAASV,MAAM,SAASe,QAASP,KAAKN,kB,GApDnDc,aCiDJC,E,4MA/CXZ,MAAQ,CACAa,WAAa,I,EAQtBxB,gBAAkB,SAAAF,GAAU,IACjB0B,EAAc,EAAKb,MAAnBa,WAKP,EAAKjB,SAAS,CACTiB,WAAYA,EAAWC,QAAO,SAACC,EAAUP,GACrC,OAAOA,IAAMrB,Q,EAM1BY,aAAe,SAACgB,GACf,EAAKnB,SAAS,CACViB,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,uDAInC,IACEF,EAAcV,KAAKH,MAAnBa,WACP,OACI,yBAAKG,UAAU,aACV,8CACA,kFACD,kBAAC,EAAD,CACKhC,cAAe6B,EACfxB,gBAAiBc,KAAKd,kBAE1B,uCACD,kBAAC,EAAD,CAAOU,aAAcI,KAAKJ,oB,GA1CvBY,a,MCElBM,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.2e6f3020.chunk.js","sourcesContent":["import React from 'react'\n\n//create simple componets\nconst TableHeader = () => {\n    return(\n        <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Job</th>\n                    <th>Remove</th>\n                </tr>\n        </thead>\n    )\n}\nconst TableBody = props => {\n    const rows = props.characterData.map((row,index) => {\n        return (\n            // Keys: https://reactjs.org/docs/lists-and-keys.html#keys\n            <tr key= {index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={()=> props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n\n    return(\n        <tbody>\n            {rows}\n        </tbody>\n    );\n}\n\n//it would be best practice to transform Table into a simple component from the class component it currently is.\nconst Table = (props) => {\n   const {characterData, removeCharacter} = props;\n        \n   return(\n            <table>\n                <TableHeader />\n                <TableBody \n                        characterData={characterData}\n                        removeCharacter={removeCharacter}\n                />\n            </table>\n        )\n}\n\nexport default Table;","/* eslint-disable no-useless-constructor */\nimport React, {Component} from 'react'\n\nclass Form extends Component{\nconstructor(props){\n    super(props);\n\n    this.initialState = {\n        name: '',\n        job: ''\n    }\n\n    this.state = this.initialState;\n\n}\n\n  \n\n    //Create the function that will uptadate the state\n    handleChange = (event) =>{\n        const {name, value} = event.target\n        \n        this.setState({\n            [name] : value\n        });\n    }\n\n    //Create the funciton that call the handleSubmit, that update the props and clear the form\n    submitForm = (event) => {\n        event.preventDefault();\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n    \n\n\n\n    render(){\n        const {name,job} = this.state;\n        return(\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}/>\n                <label htmlFor=\"job\">Job</label>\n                <input \n                    type=\"text\" \n                    name=\"job\" i\n                    d=\"job\"\n                    value={job}\n                    onChange={this.handleChange}/>\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n    }\n\n\n}\n\n\nexport default Form","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\nclass App extends Component{\n    //create a STATE object\n    state = {\n            characters : []\n    };\n\n\n    /**\n     * to be able to remove a character from the table, \n     * we're going to create a removeCharacter method\n     */\n   removeCharacter = index => {\n       const {characters} = this.state;\n       /**\n        * use this.setState()\n        * a built-in method for manipulating state\n        */\n       this.setState({\n            characters: characters.filter((character,i) => {\n                return i !== index\n            })\n        });\n   }\n\n   //this function will update the state adding the existing charactes and the new one\n   handleSubmit = (character) => {\n    this.setState({\n        characters: [...this.state.characters, character ]\n    });\n}\n\n   render(){\n       const {characters} = this.state;\n       return(\n           <div className=\"container\">\n                <h1>React Tutorial</h1>\n                <p>Add a character with a name and a job to the table.</p>\n               <Table  \n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                />\n                <h3>Add New</h3>\n               <Form  handleSubmit={this.handleSubmit}/>\n           </div>\n       );\n   }\n}\n\n// export the component as App\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}