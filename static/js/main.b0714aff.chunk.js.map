{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","Table","removeCharacter","Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","i","d","onClick","Component","App","characters","filter","character","className","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,WAChB,OACI,+BACQ,4BACI,oCACA,sCAKdC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,OAa1C,OACI,+BACKJ,IAiBEK,EAXD,SAACN,GAAW,IAChBE,EAAkCF,EAAlCE,cAAeK,EAAmBP,EAAnBO,gBAEtB,OACS,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWL,cAAeA,EAAeK,gBAAiBA,M,OCc3DC,E,4MApDXC,aAAe,CACXC,KAAM,GACNC,IAAK,I,EAGTC,MAAQ,EAAKH,a,EAGbI,aAAe,SAACC,GAAU,IAAD,EACCA,EAAMC,OAArBL,EADc,EACdA,KAAMM,EADQ,EACRA,MAEb,EAAKC,SAAL,eACKP,EAAQM,K,EAKjBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKR,e,uDAMd,IAAD,EACeW,KAAKR,MAAjBF,EADH,EACGA,KAAKC,EADR,EACQA,IACZ,OACI,8BACI,2BAAOU,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLZ,KAAK,OACLa,GAAG,OACHP,MAAON,EACPc,SAAUJ,KAAKP,eACnB,2BAAOQ,QAAQ,OAAf,OACA,2BACIC,KAAK,OACLZ,KAAK,MAAMe,GAAC,EACZC,EAAE,MACFV,MAAOL,EACPa,SAAUJ,KAAKP,eACf,2BAAOS,KAAK,SAASN,MAAM,SAASW,QAASP,KAAKF,kB,GA5CnDU,aC2CJC,E,4MAxCXjB,MAAQ,CACJkB,WAAa,I,EAOlBvB,gBAAkB,SAAAF,GAAU,IACjByB,EAAc,EAAKlB,MAAnBkB,WAKP,EAAKb,SAAS,CACTa,WAAYA,EAAWC,QAAO,SAACC,EAAUP,GACrC,OAAOA,IAAMpB,Q,EAM1Bc,aAAe,SAACa,GACf,EAAKf,SAAS,CACVa,WAAW,GAAD,mBAAM,EAAKlB,MAAMkB,YAAjB,CAA6BE,O,uDAInC,IACEF,EAAcV,KAAKR,MAAnBkB,WACP,OACI,yBAAKG,UAAU,aACX,kBAAC,EAAD,CAAQ/B,cAAe4B,EAAYvB,gBAAiBa,KAAKb,kBACzD,kBAAC,EAAD,CAAOY,aAAcC,KAAKD,oB,GAnCvBS,a,MCElBM,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.b0714aff.chunk.js","sourcesContent":["import React from 'react'\n\n//create simple componets\nconst TableHeader = () => {\n    return(\n        <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Job</th>\n                </tr>\n        </thead>\n    )\n}\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row,index) => {\n        return (\n            // Keys: https://reactjs.org/docs/lists-and-keys.html#keys\n            <tr key= {index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={()=> props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    });\n\n    return(\n        <tbody>\n            {rows}\n        </tbody>\n    )\n}\n\n//it would be best practice to transform Table into a simple component from the class component it currently is.\nconst Table = (props) => {\n   const {characterData, removeCharacter} = props;\n        \n   return(\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n            </table>\n        )\n}\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component{\n    initialState = {\n        name: '',\n        job: ''\n    }\n\n    state = this.initialState\n\n    //Create the function that will uptadate the state\n    handleChange = (event) =>{\n        const {name, value} = event.target\n        \n        this.setState({\n            [name] : value\n        });\n    }\n\n    //Create the funciton that call the handleSubmit, that update the props and clear the form\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n    \n\n\n\n    render(){\n        const {name,job} = this.state;\n        return(\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}/>\n                <label htmlFor=\"job\">Job</label>\n                <input \n                    type=\"text\" \n                    name=\"job\" i\n                    d=\"job\"\n                    value={job}\n                    onChange={this.handleChange}/>\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n    }\n\n\n}\n\n\nexport default Form","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\nclass App extends Component{\n    //create a STATE object\n    state = {\n        characters : []\n    };\n\n    /**\n     * to be able to remove a character from the table, \n     * we're going to create a removeCharacter method\n     */\n   removeCharacter = index => {\n       const {characters} = this.state;\n       /**\n        * use this.setState()\n        * a built-in method for manipulating state\n        */\n       this.setState({\n            characters: characters.filter((character,i) => {\n                return i !== index\n            })\n        });\n   }\n\n   //this function will update the state adding the existing charactes and the new one\n   handleSubmit = (character) =>{\n    this.setState({\n        characters: [...this.state.characters, character ]\n    })\n}\n\n   render(){\n       const {characters} = this.state\n       return(\n           <div className=\"container\">\n               <Table  characterData={characters} removeCharacter={this.removeCharacter}/>\n               <Form  handleSubmit={this.handleSubmit}/>\n           </div>\n       );\n   }\n}\n\n// export the component as App\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}